<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.state.dao.PfLoggerDaoI">

	<insert id="insert" parameterType="PfLoggerPo">
	 insert into <include refid='public.model' /> PF_LOGGER
	  (ID_,ADD_NAME_,ADD_NAME_CN_,DOC_CREATED_,IP_,CLASS_NAME_,OPER_NAME_,OPER_PARAMS_,OPER_RESULT_,RESULT_MSG_,OPER_NAME_CN_,MODEL_NAME_)
	  values
	  (
	  #{id ,jdbcType=VARCHAR},
        #{addName, jdbcType=VARCHAR},
        #{addNameCn, jdbcType=VARCHAR},
        #{docCreated, jdbcType=TIMESTAMP},
        #{ip, jdbcType=VARCHAR},
        #{className ,jdbcType=VARCHAR},
        #{operName ,jdbcType=VARCHAR},
        #{operParams ,jdbcType=CLOB},
        #{operResult, jdbcType=CLOB},
        #{resultMsg, jdbcType=CLOB},
        #{operNameCn ,jdbcType=VARCHAR},
        #{modelName ,jdbcType=VARCHAR}
	   )
	</insert>
	
	<resultMap id="ResultMap" type="PfLoggerPo">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="docCreated" column="DOC_CREATED_" jdbcType="TIMESTAMP" />
		<result property="ip" column="IP_" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATE_TIME_" jdbcType="VARCHAR" />
		<result property="addNameCn" column="ADD_NAME_CN_" jdbcType="VARCHAR" />
		<result property="operResult" column="OPER_RESULT_" jdbcType="VARCHAR" />
		<result property="operNameCn" column="OPER_NAME_CN_" jdbcType="VARCHAR" />
		<result property="modelName" column="MODEL_NAME_" jdbcType="VARCHAR" />
		<result property="className" column="CLASS_NAME_" jdbcType="VARCHAR" />
		<result property="resultMsg" column="RESULT_MSG_" jdbcType="VARCHAR" />
		<result property="operName" column="OPER_NAME_" jdbcType="VARCHAR" />
		<result property="operParams" column="OPER_PARAMS_" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="selectSqlWhere">
		<if test="startTime != null and endTime !=null">
			where to_date(t.Doc_CREATED_,'yyyy-MM-dd') between to_date(#{startTime,jdbcType=VARCHAR},'yyyy-MM-dd') and to_date(#{endTime,jdbcType=VARCHAR},'yyyy-MM-dd')
		</if>
		<if test="startTime != null and endTime ==null">
			where to_date(t.Doc_CREATED_,'yyyy-MM-dd') &gt;= to_date(#{startTime,jdbcType=VARCHAR},'yyyy-MM-dd')
		</if>
		<if test="startTime == null and endTime !=null">
			where to_date(t.Doc_CREATED_,'yyyy-MM-dd') &lt;= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-MM-dd')
		</if>
	</sql>

	<select id="selectLog" resultMap="ResultMap">
		select *
		from (select a.*, rownum rnum
		from (select ID_,ADD_NAME_CN_,DOC_CREATED_,IP_,OPER_RESULT_,CLASS_NAME_,RESULT_MSG_,OPER_NAME_,OPER_PARAMS_,OPER_NAME_CN_,MODEL_NAME_,to_char(DOC_CREATED_,'YYYY-MM-DD HH24:MI:SS') as CREATE_TIME_
		from <include refid='public.model' /> PF_LOGGER t
		<include refid="selectSqlWhere" />
		order by Doc_created_ desc, rowid) a
		where rownum &lt;= #{end,jdbcType=INTEGER} )
		where rnum &gt; #{start,jdbcType=INTEGER};
	</select>

	<select id="getLogCount" resultType="java.lang.Long">
		select count(*) from <include refid='public.model' /> PF_LOGGER t
		<include refid="selectSqlWhere" />
	</select>
</mapper>